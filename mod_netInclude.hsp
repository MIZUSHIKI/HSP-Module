;メインスクリプト内の #netinclude しか認識しません。
#ifdef _debug
//デバッグ時のみ #netinclude 処理を実行
#include "hspinet.as" ;デバッグ時の2つのincludeは我慢してもらう。しか・・・
#include "mod_regexp.as"
#define netinclude(%1) addition %1*
	exist "hsptmp" //addition の右側は「%c exist %1」とか繋げても一切反応しないから hsptmp を読みに行く 
	if strsize>=0 {
		t@__ni="":c@__ni="" ;初期化
		notesel t@__ni:noteload "hsptmp":noteunsel ;hsptmp読み込み
		matches t@__ni, t@__ni, "#netinclude\\s*\"(.+?)\"" ;#netinclude部分を読み取り
		repeat stat
			exist t@__ni(cnt,1) ;ファイルがダウンロード済みなら何もしない
			if strsize=-1{
				a@__ni=""+dir_cur+"\n\nに\n\n"
				foreach t@__ni:a@__ni+="・"+t@__ni(cnt,1)+"\n" :loop
				dialog a@__ni+"\nをダウンロードしても良いですか？",2,"#netinclude\ ":if stat=7{break} ;"\ "はminVersionの時のmatches検索回避の為
				if c@__ni=""{r@__ni="":netinit} ;変数とhspinetの初期化
				c@__ni=dir_cur ;カレントディレクトリ保存
				split t@__ni(cnt,1),"/",r@__ni ;URL(ディレクトリ)構造分解
				if stat>0 {
					repeat stat-1 ;深い階層を作っていく
						dirlist a@__ni,r@__ni(cnt),5 ;フォルダ存在確認
						if stat=0 :mkdir r@__ni(cnt) ;フォルダが存在しないなら作る
						chdir r@__ni(cnt) ;カレントディレクトリを1階層深くに移動
					loop
				}
				neturl "https://raw.githubusercontent.com/"+getpath(t@__ni(cnt,1),32) ;GitHubから
				netload getpath(t@__ni(cnt,1),8) ;HSPモジュールをダウンロード
				chdir c@__ni ;元のカレントディレクトリに戻す
			}
		loop
		if c@__ni!="" { ;1つでもダウンロードしてたらもう一度実行してもらう
			dialog "もう一度、実行してください",,"#netinclude - ダウンロード完了" :end
		}
		sdim t@__ni,0 ;大きめ(?)の変数を初期化
	}
#else
//実行ファイル作成時はただの #include になる
#define netinclude(%1) include %1
#endif
